#ifndef POSTERIORCMPVIS2_H
#define POSTERIORCMPVIS2_H

void gcmpvis2 (int *pop12, int *pop21,
            int *nk, 
            int *K, 
            int *n1, 
            int *n2, 
            int *n0, 
            int *samplesize, int *burnin, int *interval,
            double *mu, double *dfmu, 
            double *sigma, double *dfsigma,
            double *beta0muprior, double *beta0sigmaprior, 
            double *beta1muprior, double *beta1sigmaprior, 
            double *msmmu, double *msmdfmu,
            double *msmsd, double *msmdfsd,
            int *Npi,
            int *srd, 
            int *numrec, 
            double *rectime,
            int *srd2, 
            int *numrec2, 
            double *rectime2,
            int *rc, 
            int *maxcoupons,
            double *muproposal, 
            double *sigmaproposal, 
            double *beta0proposal, double *beta1proposal, 
            double *msmmuproposal, double *msmsdproposal,
            int *N, int *maxN, 
            double *sample, 
            int *vsample, 
            int *vsample2, 
            double *ppos, 
            double *lpriorm, 
            int *burnintheta,
            int *burninbeta,
            int *verbose
			 );

void MHcmpbeta2 (int *d1, int *d2, int *n1, int *n2, int *K,
            double *beta0, double *beta0s, double *beta1, double *beta1s, 
            double *msmmu, double *msmdfmu,
            double *msmsd, double *msmdfsd,
            int *srd, 
            int *numrec, 
            double *rectime,
            int *srd2, 
            int *numrec2, 
            double *rectime2,
            int *maxcoupons,
            double *beta0proposal, double *beta1proposal, 
            double *msmmuproposal, double *msmsdproposal, 
            double *beta0sample, double *beta1sample,
            double *msmmusample, double *msmsdsample,
            int *samplesize, int *staken, int *burninbeta, int *interval,
            int *verbose
         );
#endif /* POSTERIORCMPVIS2_H */
